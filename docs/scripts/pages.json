[{"name":"abstract class Kenet","description":"org.kotlin.everywhere.net.Kenet","location":"kenet-dsl/org.kotlin.everywhere.net/-kenet/index.html","searchKeys":["Kenet","abstract class Kenet","org.kotlin.everywhere.net.Kenet"]},{"name":"class Call<P : Any, R : Any>(kenet: Kenet, name: String, parameterSerializer: KSerializer<P>, responseSerializer: KSerializer<R>) : Endpoint","description":"org.kotlin.everywhere.net.Call","location":"kenet-dsl/org.kotlin.everywhere.net/-call/index.html","searchKeys":["Call","class Call<P : Any, R : Any>(kenet: Kenet, name: String, parameterSerializer: KSerializer<P>, responseSerializer: KSerializer<R>) : Endpoint","org.kotlin.everywhere.net.Call"]},{"name":"class SubKenet<T : Kenet>(kenet: Kenet, name: String, sub: T) : Endpoint","description":"org.kotlin.everywhere.net.SubKenet","location":"kenet-dsl/org.kotlin.everywhere.net/-sub-kenet/index.html","searchKeys":["SubKenet","class SubKenet<T : Kenet>(kenet: Kenet, name: String, sub: T) : Endpoint","org.kotlin.everywhere.net.SubKenet"]},{"name":"data class Request(subPath: List<String>, endpointName: String, parameterJson: String)","description":"org.kotlin.everywhere.net.Request","location":"kenet-dsl/org.kotlin.everywhere.net/-request/index.html","searchKeys":["Request","data class Request(subPath: List<String>, endpointName: String, parameterJson: String)","org.kotlin.everywhere.net.Request"]},{"name":"data class Response(responseJson: String)","description":"org.kotlin.everywhere.net.Response","location":"kenet-dsl/org.kotlin.everywhere.net/-response/index.html","searchKeys":["Response","data class Response(responseJson: String)","org.kotlin.everywhere.net.Response"]},{"name":"fun <P : Any, R : Any> Call(kenet: Kenet, name: String, parameterSerializer: KSerializer<P>, responseSerializer: KSerializer<R>)","description":"org.kotlin.everywhere.net.Call.Call","location":"kenet-dsl/org.kotlin.everywhere.net/-call/-call.html","searchKeys":["Call","fun <P : Any, R : Any> Call(kenet: Kenet, name: String, parameterSerializer: KSerializer<P>, responseSerializer: KSerializer<R>)","org.kotlin.everywhere.net.Call.Call"]},{"name":"fun <T : Kenet> SubKenet(kenet: Kenet, name: String, sub: T)","description":"org.kotlin.everywhere.net.SubKenet.SubKenet","location":"kenet-dsl/org.kotlin.everywhere.net/-sub-kenet/-sub-kenet.html","searchKeys":["SubKenet","fun <T : Kenet> SubKenet(kenet: Kenet, name: String, sub: T)","org.kotlin.everywhere.net.SubKenet.SubKenet"]},{"name":"fun <T : Kenet> c(sub: T): ReadOnlyProperty<Kenet, T>","description":"org.kotlin.everywhere.net.Kenet.c","location":"kenet-dsl/org.kotlin.everywhere.net/-kenet/c.html","searchKeys":["c","fun <T : Kenet> c(sub: T): ReadOnlyProperty<Kenet, T>","org.kotlin.everywhere.net.Kenet.c"]},{"name":"fun Kenet()","description":"org.kotlin.everywhere.net.Kenet.Kenet","location":"kenet-dsl/org.kotlin.everywhere.net/-kenet/-kenet.html","searchKeys":["Kenet","fun Kenet()","org.kotlin.everywhere.net.Kenet.Kenet"]},{"name":"fun Request(subPath: List<String>, endpointName: String, parameterJson: String)","description":"org.kotlin.everywhere.net.Request.Request","location":"kenet-dsl/org.kotlin.everywhere.net/-request/-request.html","searchKeys":["Request","fun Request(subPath: List<String>, endpointName: String, parameterJson: String)","org.kotlin.everywhere.net.Request.Request"]},{"name":"fun Response(responseJson: String)","description":"org.kotlin.everywhere.net.Response.Response","location":"kenet-dsl/org.kotlin.everywhere.net/-response/-response.html","searchKeys":["Response","fun Response(responseJson: String)","org.kotlin.everywhere.net.Response.Response"]},{"name":"inline fun <P : Any, R : Any> c(): ReadOnlyProperty<Kenet, Call<P, R>>","description":"org.kotlin.everywhere.net.Kenet.c","location":"kenet-dsl/org.kotlin.everywhere.net/-kenet/c.html","searchKeys":["c","inline fun <P : Any, R : Any> c(): ReadOnlyProperty<Kenet, Call<P, R>>","org.kotlin.everywhere.net.Kenet.c"]},{"name":"interface KenetClient","description":"org.kotlin.everywhere.net.KenetClient","location":"kenet-dsl/org.kotlin.everywhere.net/-kenet-client/index.html","searchKeys":["KenetClient","interface KenetClient","org.kotlin.everywhere.net.KenetClient"]},{"name":"sealed class Endpoint","description":"org.kotlin.everywhere.net.Endpoint","location":"kenet-dsl/org.kotlin.everywhere.net/-endpoint/index.html","searchKeys":["Endpoint","sealed class Endpoint","org.kotlin.everywhere.net.Endpoint"]},{"name":"val _endpoints: MutableList<Endpoint>","description":"org.kotlin.everywhere.net.Kenet._endpoints","location":"kenet-dsl/org.kotlin.everywhere.net/-kenet/_endpoints.html","searchKeys":["_endpoints","val _endpoints: MutableList<Endpoint>","org.kotlin.everywhere.net.Kenet._endpoints"]},{"name":"val endpointName: String","description":"org.kotlin.everywhere.net.Request.endpointName","location":"kenet-dsl/org.kotlin.everywhere.net/-request/endpoint-name.html","searchKeys":["endpointName","val endpointName: String","org.kotlin.everywhere.net.Request.endpointName"]},{"name":"val kenet: Kenet","description":"org.kotlin.everywhere.net.Endpoint.kenet","location":"kenet-dsl/org.kotlin.everywhere.net/-endpoint/kenet.html","searchKeys":["kenet","val kenet: Kenet","org.kotlin.everywhere.net.Endpoint.kenet"]},{"name":"val parameterJson: String","description":"org.kotlin.everywhere.net.Request.parameterJson","location":"kenet-dsl/org.kotlin.everywhere.net/-request/parameter-json.html","searchKeys":["parameterJson","val parameterJson: String","org.kotlin.everywhere.net.Request.parameterJson"]},{"name":"val parameterSerializer: KSerializer<P>","description":"org.kotlin.everywhere.net.Call.parameterSerializer","location":"kenet-dsl/org.kotlin.everywhere.net/-call/parameter-serializer.html","searchKeys":["parameterSerializer","val parameterSerializer: KSerializer<P>","org.kotlin.everywhere.net.Call.parameterSerializer"]},{"name":"val responseJson: String","description":"org.kotlin.everywhere.net.Response.responseJson","location":"kenet-dsl/org.kotlin.everywhere.net/-response/response-json.html","searchKeys":["responseJson","val responseJson: String","org.kotlin.everywhere.net.Response.responseJson"]},{"name":"val responseSerializer: KSerializer<R>","description":"org.kotlin.everywhere.net.Call.responseSerializer","location":"kenet-dsl/org.kotlin.everywhere.net/-call/response-serializer.html","searchKeys":["responseSerializer","val responseSerializer: KSerializer<R>","org.kotlin.everywhere.net.Call.responseSerializer"]},{"name":"val sub: T","description":"org.kotlin.everywhere.net.SubKenet.sub","location":"kenet-dsl/org.kotlin.everywhere.net/-sub-kenet/sub.html","searchKeys":["sub","val sub: T","org.kotlin.everywhere.net.SubKenet.sub"]},{"name":"val subPath: List<String>","description":"org.kotlin.everywhere.net.Request.subPath","location":"kenet-dsl/org.kotlin.everywhere.net/-request/sub-path.html","searchKeys":["subPath","val subPath: List<String>","org.kotlin.everywhere.net.Request.subPath"]},{"name":"var _client: KenetClient? = null","description":"org.kotlin.everywhere.net.Kenet._client","location":"kenet-dsl/org.kotlin.everywhere.net/-kenet/_client.html","searchKeys":["_client","var _client: KenetClient? = null","org.kotlin.everywhere.net.Kenet._client"]},{"name":"var _name: String","description":"org.kotlin.everywhere.net.Kenet._name","location":"kenet-dsl/org.kotlin.everywhere.net/-kenet/_name.html","searchKeys":["_name","var _name: String","org.kotlin.everywhere.net.Kenet._name"]},{"name":"var _parent: Kenet? = null","description":"org.kotlin.everywhere.net.Kenet._parent","location":"kenet-dsl/org.kotlin.everywhere.net/-kenet/_parent.html","searchKeys":["_parent","var _parent: Kenet? = null","org.kotlin.everywhere.net.Kenet._parent"]},{"name":"var handler: (P) -> R","description":"org.kotlin.everywhere.net.Call.handler","location":"kenet-dsl/org.kotlin.everywhere.net/-call/handler.html","searchKeys":["handler","var handler: (P) -> R","org.kotlin.everywhere.net.Call.handler"]},{"name":"var initialized: Boolean = false","description":"org.kotlin.everywhere.net.Endpoint.initialized","location":"kenet-dsl/org.kotlin.everywhere.net/-endpoint/initialized.html","searchKeys":["initialized","var initialized: Boolean = false","org.kotlin.everywhere.net.Endpoint.initialized"]},{"name":"var name: String","description":"org.kotlin.everywhere.net.Endpoint.name","location":"kenet-dsl/org.kotlin.everywhere.net/-endpoint/name.html","searchKeys":["name","var name: String","org.kotlin.everywhere.net.Endpoint.name"]},{"name":"abstract val name: String","description":"org.kotlin.everywhere.net.gen.typescript.EndpointDefinition.name","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-endpoint-definition/name.html","searchKeys":["name","abstract val name: String","org.kotlin.everywhere.net.gen.typescript.EndpointDefinition.name"]},{"name":"data class CallDefinition(name: String, parameterType: KType, responseType: KType) : EndpointDefinition","description":"org.kotlin.everywhere.net.gen.typescript.CallDefinition","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-call-definition/index.html","searchKeys":["CallDefinition","data class CallDefinition(name: String, parameterType: KType, responseType: KType) : EndpointDefinition","org.kotlin.everywhere.net.gen.typescript.CallDefinition"]},{"name":"data class KenetDefinition(name: String, definitions: List<EndpointDefinition>)","description":"org.kotlin.everywhere.net.gen.typescript.KenetDefinition","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-kenet-definition/index.html","searchKeys":["KenetDefinition","data class KenetDefinition(name: String, definitions: List<EndpointDefinition>)","org.kotlin.everywhere.net.gen.typescript.KenetDefinition"]},{"name":"data class SubDefinition(name: String, kenetDefinition: KenetDefinition) : EndpointDefinition","description":"org.kotlin.everywhere.net.gen.typescript.SubDefinition","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-sub-definition/index.html","searchKeys":["SubDefinition","data class SubDefinition(name: String, kenetDefinition: KenetDefinition) : EndpointDefinition","org.kotlin.everywhere.net.gen.typescript.SubDefinition"]},{"name":"fun CallDefinition(name: String, parameterType: KType, responseType: KType)","description":"org.kotlin.everywhere.net.gen.typescript.CallDefinition.CallDefinition","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-call-definition/-call-definition.html","searchKeys":["CallDefinition","fun CallDefinition(name: String, parameterType: KType, responseType: KType)","org.kotlin.everywhere.net.gen.typescript.CallDefinition.CallDefinition"]},{"name":"fun KenetDefinition(name: String, definitions: List<EndpointDefinition>)","description":"org.kotlin.everywhere.net.gen.typescript.KenetDefinition.KenetDefinition","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-kenet-definition/-kenet-definition.html","searchKeys":["KenetDefinition","fun KenetDefinition(name: String, definitions: List<EndpointDefinition>)","org.kotlin.everywhere.net.gen.typescript.KenetDefinition.KenetDefinition"]},{"name":"fun SubDefinition(name: String, kenetDefinition: KenetDefinition)","description":"org.kotlin.everywhere.net.gen.typescript.SubDefinition.SubDefinition","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-sub-definition/-sub-definition.html","searchKeys":["SubDefinition","fun SubDefinition(name: String, kenetDefinition: KenetDefinition)","org.kotlin.everywhere.net.gen.typescript.SubDefinition.SubDefinition"]},{"name":"fun generate(kenet: Kenet, path: Path, name: String, variant: Variant)","description":"org.kotlin.everywhere.net.gen.typescript.generate","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/generate.html","searchKeys":["generate","fun generate(kenet: Kenet, path: Path, name: String, variant: Variant)","org.kotlin.everywhere.net.gen.typescript.generate"]},{"name":"fun generate(kenet: Kenet, variant: Variant): String","description":"org.kotlin.everywhere.net.gen.typescript.generate","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/generate.html","searchKeys":["generate","fun generate(kenet: Kenet, variant: Variant): String","org.kotlin.everywhere.net.gen.typescript.generate"]},{"name":"object Deno : Variant","description":"org.kotlin.everywhere.net.gen.typescript.Deno","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-deno/index.html","searchKeys":["Deno","object Deno : Variant","org.kotlin.everywhere.net.gen.typescript.Deno"]},{"name":"object TypeScript : Variant","description":"org.kotlin.everywhere.net.gen.typescript.TypeScript","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-type-script/index.html","searchKeys":["TypeScript","object TypeScript : Variant","org.kotlin.everywhere.net.gen.typescript.TypeScript"]},{"name":"open override val name: String","description":"org.kotlin.everywhere.net.gen.typescript.CallDefinition.name","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-call-definition/name.html","searchKeys":["name","open override val name: String","org.kotlin.everywhere.net.gen.typescript.CallDefinition.name"]},{"name":"open override val name: String","description":"org.kotlin.everywhere.net.gen.typescript.SubDefinition.name","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-sub-definition/name.html","searchKeys":["name","open override val name: String","org.kotlin.everywhere.net.gen.typescript.SubDefinition.name"]},{"name":"sealed class EndpointDefinition","description":"org.kotlin.everywhere.net.gen.typescript.EndpointDefinition","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-endpoint-definition/index.html","searchKeys":["EndpointDefinition","sealed class EndpointDefinition","org.kotlin.everywhere.net.gen.typescript.EndpointDefinition"]},{"name":"sealed class Variant","description":"org.kotlin.everywhere.net.gen.typescript.Variant","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-variant/index.html","searchKeys":["Variant","sealed class Variant","org.kotlin.everywhere.net.gen.typescript.Variant"]},{"name":"val definitions: List<EndpointDefinition>","description":"org.kotlin.everywhere.net.gen.typescript.KenetDefinition.definitions","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-kenet-definition/definitions.html","searchKeys":["definitions","val definitions: List<EndpointDefinition>","org.kotlin.everywhere.net.gen.typescript.KenetDefinition.definitions"]},{"name":"val kenetDefinition: KenetDefinition","description":"org.kotlin.everywhere.net.gen.typescript.SubDefinition.kenetDefinition","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-sub-definition/kenet-definition.html","searchKeys":["kenetDefinition","val kenetDefinition: KenetDefinition","org.kotlin.everywhere.net.gen.typescript.SubDefinition.kenetDefinition"]},{"name":"val name: String","description":"org.kotlin.everywhere.net.gen.typescript.KenetDefinition.name","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-kenet-definition/name.html","searchKeys":["name","val name: String","org.kotlin.everywhere.net.gen.typescript.KenetDefinition.name"]},{"name":"val parameterType: KType","description":"org.kotlin.everywhere.net.gen.typescript.CallDefinition.parameterType","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-call-definition/parameter-type.html","searchKeys":["parameterType","val parameterType: KType","org.kotlin.everywhere.net.gen.typescript.CallDefinition.parameterType"]},{"name":"val responseType: KType","description":"org.kotlin.everywhere.net.gen.typescript.CallDefinition.responseType","location":"kenet-gen-typescript/org.kotlin.everywhere.net.gen.typescript/-call-definition/response-type.html","searchKeys":["responseType","val responseType: KType","org.kotlin.everywhere.net.gen.typescript.CallDefinition.responseType"]},{"name":"class HttpServerEngine : ServerEngine","description":"org.kotlin.everywhere.net.HttpServerEngine","location":"kenet-server-engine-http/org.kotlin.everywhere.net/-http-server-engine/index.html","searchKeys":["HttpServerEngine","class HttpServerEngine : ServerEngine","org.kotlin.everywhere.net.HttpServerEngine"]},{"name":"fun HttpServerEngine()","description":"org.kotlin.everywhere.net.HttpServerEngine.HttpServerEngine","location":"kenet-server-engine-http/org.kotlin.everywhere.net/-http-server-engine/-http-server-engine.html","searchKeys":["HttpServerEngine","fun HttpServerEngine()","org.kotlin.everywhere.net.HttpServerEngine.HttpServerEngine"]},{"name":"open suspend override fun launch(port: Int, kenet: Kenet)","description":"org.kotlin.everywhere.net.HttpServerEngine.launch","location":"kenet-server-engine-http/org.kotlin.everywhere.net/-http-server-engine/launch.html","searchKeys":["launch","open suspend override fun launch(port: Int, kenet: Kenet)","org.kotlin.everywhere.net.HttpServerEngine.launch"]},{"name":"class HttpClientEngine(urlPrefix: String) : ClientEngine","description":"org.kotlin.everywhere.net.HttpClientEngine","location":"kenet-client-engine-http/org.kotlin.everywhere.net/-http-client-engine/index.html","searchKeys":["HttpClientEngine","class HttpClientEngine(urlPrefix: String) : ClientEngine","org.kotlin.everywhere.net.HttpClientEngine"]},{"name":"fun <P : Any, R : Any> createRequest(call: Call<P, R>, parameter: P): Request","description":"org.kotlin.everywhere.net.createRequest","location":"kenet-client-engine-http/org.kotlin.everywhere.net/create-request.html","searchKeys":["createRequest","fun <P : Any, R : Any> createRequest(call: Call<P, R>, parameter: P): Request","org.kotlin.everywhere.net.createRequest"]},{"name":"fun HttpClientEngine(urlPrefix: String)","description":"org.kotlin.everywhere.net.HttpClientEngine.HttpClientEngine","location":"kenet-client-engine-http/org.kotlin.everywhere.net/-http-client-engine/-http-client-engine.html","searchKeys":["HttpClientEngine","fun HttpClientEngine(urlPrefix: String)","org.kotlin.everywhere.net.HttpClientEngine.HttpClientEngine"]},{"name":"open suspend override fun <P : Any, R : Any> call(call: Call<P, R>, parameter: P): R","description":"org.kotlin.everywhere.net.HttpClientEngine.call","location":"kenet-client-engine-http/org.kotlin.everywhere.net/-http-client-engine/call.html","searchKeys":["call","open suspend override fun <P : Any, R : Any> call(call: Call<P, R>, parameter: P): R","org.kotlin.everywhere.net.HttpClientEngine.call"]},{"name":"abstract class ServerEngine","description":"org.kotlin.everywhere.net.ServerEngine","location":"kenet-server/org.kotlin.everywhere.net/-server-engine/index.html","searchKeys":["ServerEngine","abstract class ServerEngine","org.kotlin.everywhere.net.ServerEngine"]},{"name":"abstract suspend fun launch(port: Int, kenet: Kenet)","description":"org.kotlin.everywhere.net.ServerEngine.launch","location":"kenet-server/org.kotlin.everywhere.net/-server-engine/launch.html","searchKeys":["launch","abstract suspend fun launch(port: Int, kenet: Kenet)","org.kotlin.everywhere.net.ServerEngine.launch"]},{"name":"class NotInitialized(message: String) : Throwable","description":"org.kotlin.everywhere.net.NotInitialized","location":"kenet-server/org.kotlin.everywhere.net/-not-initialized/index.html","searchKeys":["NotInitialized","class NotInitialized(message: String) : Throwable","org.kotlin.everywhere.net.NotInitialized"]},{"name":"class Server(kenet: Kenet, engine: ServerEngine)","description":"org.kotlin.everywhere.net.Server","location":"kenet-server/org.kotlin.everywhere.net/-server/index.html","searchKeys":["Server","class Server(kenet: Kenet, engine: ServerEngine)","org.kotlin.everywhere.net.Server"]},{"name":"class TestServerEngine : ServerEngine","description":"org.kotlin.everywhere.net.TestServerEngine","location":"kenet-server/org.kotlin.everywhere.net/-test-server-engine/index.html","searchKeys":["TestServerEngine","class TestServerEngine : ServerEngine","org.kotlin.everywhere.net.TestServerEngine"]},{"name":"fun <P : Any, R : Any> Call<P, R>.handle(parameterJson: String): String","description":"org.kotlin.everywhere.net.handle","location":"kenet-server/org.kotlin.everywhere.net/handle.html","searchKeys":["handle","fun <P : Any, R : Any> Call<P, R>.handle(parameterJson: String): String","org.kotlin.everywhere.net.handle"]},{"name":"fun NotInitialized(message: String)","description":"org.kotlin.everywhere.net.NotInitialized.NotInitialized","location":"kenet-server/org.kotlin.everywhere.net/-not-initialized/-not-initialized.html","searchKeys":["NotInitialized","fun NotInitialized(message: String)","org.kotlin.everywhere.net.NotInitialized.NotInitialized"]},{"name":"fun Server(kenet: Kenet, engine: ServerEngine)","description":"org.kotlin.everywhere.net.Server.Server","location":"kenet-server/org.kotlin.everywhere.net/-server/-server.html","searchKeys":["Server","fun Server(kenet: Kenet, engine: ServerEngine)","org.kotlin.everywhere.net.Server.Server"]},{"name":"fun ServerEngine()","description":"org.kotlin.everywhere.net.ServerEngine.ServerEngine","location":"kenet-server/org.kotlin.everywhere.net/-server-engine/-server-engine.html","searchKeys":["ServerEngine","fun ServerEngine()","org.kotlin.everywhere.net.ServerEngine.ServerEngine"]},{"name":"fun TestServerEngine()","description":"org.kotlin.everywhere.net.TestServerEngine.TestServerEngine","location":"kenet-server/org.kotlin.everywhere.net/-test-server-engine/-test-server-engine.html","searchKeys":["TestServerEngine","fun TestServerEngine()","org.kotlin.everywhere.net.TestServerEngine.TestServerEngine"]},{"name":"fun createServer(api: Kenet, engine: ServerEngine): Server","description":"org.kotlin.everywhere.net.createServer","location":"kenet-server/org.kotlin.everywhere.net/create-server.html","searchKeys":["createServer","fun createServer(api: Kenet, engine: ServerEngine): Server","org.kotlin.everywhere.net.createServer"]},{"name":"fun ensureInitialize()","description":"org.kotlin.everywhere.net.Server.ensureInitialize","location":"kenet-server/org.kotlin.everywhere.net/-server/ensure-initialize.html","searchKeys":["ensureInitialize","fun ensureInitialize()","org.kotlin.everywhere.net.Server.ensureInitialize"]},{"name":"open suspend override fun launch(port: Int, kenet: Kenet)","description":"org.kotlin.everywhere.net.TestServerEngine.launch","location":"kenet-server/org.kotlin.everywhere.net/-test-server-engine/launch.html","searchKeys":["launch","open suspend override fun launch(port: Int, kenet: Kenet)","org.kotlin.everywhere.net.TestServerEngine.launch"]},{"name":"operator fun <P : Any, R : Any> Call<P, R>.invoke(handler: (P) -> R)","description":"org.kotlin.everywhere.net.invoke","location":"kenet-server/org.kotlin.everywhere.net/invoke.html","searchKeys":["invoke","operator fun <P : Any, R : Any> Call<P, R>.invoke(handler: (P) -> R)","org.kotlin.everywhere.net.invoke"]},{"name":"suspend fun launch(port: Int)","description":"org.kotlin.everywhere.net.Server.launch","location":"kenet-server/org.kotlin.everywhere.net/-server/launch.html","searchKeys":["launch","suspend fun launch(port: Int)","org.kotlin.everywhere.net.Server.launch"]},{"name":"abstract class ClientEngine","description":"org.kotlin.everywhere.net.ClientEngine","location":"kenet-client/org.kotlin.everywhere.net/-client-engine/index.html","searchKeys":["ClientEngine","abstract class ClientEngine","org.kotlin.everywhere.net.ClientEngine"]},{"name":"abstract suspend fun <P : Any, R : Any> call(call: Call<P, R>, parameter: P): R","description":"org.kotlin.everywhere.net.ClientEngine.call","location":"kenet-client/org.kotlin.everywhere.net/-client-engine/call.html","searchKeys":["call","abstract suspend fun <P : Any, R : Any> call(call: Call<P, R>, parameter: P): R","org.kotlin.everywhere.net.ClientEngine.call"]},{"name":"class Client<T : Kenet>(kenet: T, engine: ClientEngine) : KenetClient","description":"org.kotlin.everywhere.net.Client","location":"kenet-client/org.kotlin.everywhere.net/-client/index.html","searchKeys":["Client","class Client<T : Kenet>(kenet: T, engine: ClientEngine) : KenetClient","org.kotlin.everywhere.net.Client"]},{"name":"class TestClientEngine : ClientEngine","description":"org.kotlin.everywhere.net.TestClientEngine","location":"kenet-client/org.kotlin.everywhere.net/-test-client-engine/index.html","searchKeys":["TestClientEngine","class TestClientEngine : ClientEngine","org.kotlin.everywhere.net.TestClientEngine"]},{"name":"fun <T : Kenet> Client(kenet: T, engine: ClientEngine)","description":"org.kotlin.everywhere.net.Client.Client","location":"kenet-client/org.kotlin.everywhere.net/-client/-client.html","searchKeys":["Client","fun <T : Kenet> Client(kenet: T, engine: ClientEngine)","org.kotlin.everywhere.net.Client.Client"]},{"name":"fun <T : Kenet> createClient(kenet: T, engine: ClientEngine): Client<T>","description":"org.kotlin.everywhere.net.createClient","location":"kenet-client/org.kotlin.everywhere.net/create-client.html","searchKeys":["createClient","fun <T : Kenet> createClient(kenet: T, engine: ClientEngine): Client<T>","org.kotlin.everywhere.net.createClient"]},{"name":"fun ClientEngine()","description":"org.kotlin.everywhere.net.ClientEngine.ClientEngine","location":"kenet-client/org.kotlin.everywhere.net/-client-engine/-client-engine.html","searchKeys":["ClientEngine","fun ClientEngine()","org.kotlin.everywhere.net.ClientEngine.ClientEngine"]},{"name":"fun TestClientEngine()","description":"org.kotlin.everywhere.net.TestClientEngine.TestClientEngine","location":"kenet-client/org.kotlin.everywhere.net/-test-client-engine/-test-client-engine.html","searchKeys":["TestClientEngine","fun TestClientEngine()","org.kotlin.everywhere.net.TestClientEngine.TestClientEngine"]},{"name":"open suspend override fun <P : Any, R : Any> call(call: Call<P, R>, parameter: P): R","description":"org.kotlin.everywhere.net.TestClientEngine.call","location":"kenet-client/org.kotlin.everywhere.net/-test-client-engine/call.html","searchKeys":["call","open suspend override fun <P : Any, R : Any> call(call: Call<P, R>, parameter: P): R","org.kotlin.everywhere.net.TestClientEngine.call"]},{"name":"suspend operator fun <P : Any, R : Any> Call<P, R>.invoke(parameter: P): R","description":"org.kotlin.everywhere.net.invoke","location":"kenet-client/org.kotlin.everywhere.net/invoke.html","searchKeys":["invoke","suspend operator fun <P : Any, R : Any> Call<P, R>.invoke(parameter: P): R","org.kotlin.everywhere.net.invoke"]},{"name":"val kenet: T","description":"org.kotlin.everywhere.net.Client.kenet","location":"kenet-client/org.kotlin.everywhere.net/-client/kenet.html","searchKeys":["kenet","val kenet: T","org.kotlin.everywhere.net.Client.kenet"]}]